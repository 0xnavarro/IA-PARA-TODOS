# Importar las bibliotecas necesarias
import streamlit as st
from phi.assistant import Assistant
from phi.tools.serpapi_tools import SerpApiTools
from phi.llm.anthropic import Claude
from textwrap import dedent

# Configurar la aplicaci√≥n Streamlit
st.title("Agente de Producci√≥n de Pel√≠culas IA üé¨")
st.caption("Da vida a tus ideas cinematogr√°ficas con los equipos de escritura de guiones y casting de agentes IA")

# Obtener la clave API de Anthropic del usuario
anthropic_api_key = st.text_input("Ingresa la Clave API de Anthropic para acceder a Claude Sonnet 3.5", type="password")
# Obtener la clave API de SerpAPI del usuario
serp_api_key = st.text_input("Ingresa la Clave API de SerpAPI para la funcionalidad de b√∫squeda", type="password")

if anthropic_api_key and serp_api_key:
    script_writer = Assistant(
        name="Guionista",
        llm=Claude(model="claude-3-5-sonnet-20240620", api_key=anthropic_api_key),
        description=dedent(
            """\
        Eres un experto en escritura de guiones. Dada una idea de pel√≠cula y g√©nero,
        desarrolla un esquema de guion atractivo con descripciones de personajes y puntos clave de la trama.
        """
        ),
        instructions=[
            "Escribe un esquema de guion con 3-5 personajes principales y puntos clave de la trama.",
            "Esquematiza la estructura de tres actos y sugiere 2-3 giros.",
            "Aseg√∫rate de que el guion se alinee con el g√©nero especificado y el p√∫blico objetivo.",
        ],
    )

    casting_director = Assistant(
        name="Director de Casting",
        llm=Claude(model="claude-3-5-sonnet-20240620", api_key=anthropic_api_key),
        description=dedent(
            """\
        Eres un talentoso director de casting. Dado un esquema de guion y descripciones de personajes,
        sugiere actores adecuados para los roles principales, considerando sus actuaciones pasadas y disponibilidad actual.
        """
        ),
        instructions=[
            "Sugiere 2-3 actores para cada rol principal.",
            "Verifica el estado actual de los actores usando `search_google`.",
            "Proporciona una breve explicaci√≥n para cada sugerencia de casting.",
            "Considera la diversidad y representaci√≥n en tus elecciones de casting.",
        ],
        tools=[SerpApiTools(api_key=serp_api_key)],
    )

    movie_producer = Assistant(
        name="Productor de Pel√≠culas",
        llm=Claude(model="claude-3-5-sonnet-20240620", api_key=anthropic_api_key),
        team=[script_writer, casting_director],
        description="Productor de pel√≠culas experimentado supervisando guion y casting.",
        instructions=[
            "Pide al Guionista un esquema de guion basado en la idea de pel√≠cula.",
            "Pasa el esquema al Director de Casting para sugerencias de casting.",
            "Resume el esquema de guion y las sugerencias de casting.",
            "Proporciona una visi√≥n general concisa del concepto de la pel√≠cula.",
        ],
        markdown=True,
    )

    # Campo de entrada para la consulta del informe
    movie_idea = st.text_area("Describe tu idea de pel√≠cula en unas pocas oraciones:")
    genre = st.selectbox("Selecciona el g√©nero de la pel√≠cula:",
                         ["Acci√≥n", "Comedia", "Drama", "Ciencia Ficci√≥n", "Terror", "Romance", "Suspenso"])
    target_audience = st.selectbox("Selecciona el p√∫blico objetivo:",
                                   ["General", "Ni√±os", "Adolescentes", "Adultos", "Maduro"])
    estimated_runtime = st.slider("Duraci√≥n estimada (en minutos):", 60, 180, 120)

    # Procesar el concepto de la pel√≠cula
    if st.button("Desarrollar Concepto de Pel√≠cula"):
        with st.spinner("Desarrollando concepto de pel√≠cula..."):
            input_text = (
                f"Idea de pel√≠cula: {movie_idea}, G√©nero: {genre}, "
                f"P√∫blico objetivo: {target_audience}, Duraci√≥n estimada: {estimated_runtime} minutos"
            )
            # Obtener la respuesta del asistente
            response = movie_producer.run(input_text, stream=False)
            st.write(response)